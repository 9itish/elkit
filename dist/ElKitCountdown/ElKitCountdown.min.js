var ElKitCountdown=function(t){"use strict";return t.ElKitCountdown=class{#t;#e;#i;#s;#n;#r;#a;#o;#m;#h;#l;constructor({wrapperSelector:t,endTime:e,timeSelectors:i,endDuration:s,startTime:n=new Date,onStart:r=()=>{},onUpdate:a=()=>{},onComplete:o=()=>{},onStop:m=()=>{},onPause:h=()=>{},onResume:l=()=>{}}){if(!e&&!s)throw new Error("Either provide an end time or end duration!");if(e&&"object"!=typeof e)throw new Error("endTime must be a valid object.");if(s&&"object"!=typeof s)throw new Error("endDuration must be a valid object.");let u=document.querySelector(t);u&&(this.#t=u),this.#e=this.#u(i),this.#h=!1,this.#s=n,console.log(`startDateTime is ${this.#s} in constructor`),e&&(this.#i=this.#d(e),this.#m=!1),s&&(this.#o=s,this.#m=!0,n&&(this.#i=this.#D(s))),this.onStart=r,this.onUpdate=a,this.onComplete=o,this.onStop=m,this.onPause=h,this.onResume=l,this.#c()}#u(t){let e={};for(const[i,s]of Object.entries(t)){let t=this.#t.querySelector(s);t&&(e[i]=t)}return e}#D(t){const{d:e=0,hh:i=0,mm:s=0,ss:n=0}=t;if(Number.isNaN(e)||e<0||Number.isNaN(i)||i<0||Number.isNaN(s)||s<0||Number.isNaN(n)||n<0)throw new Error("Invalid duration values. Must be non-negative numbers.");const r=this.#s,a=new Date(r);return a.setDate(a.getDate()+e),a.setHours(a.getHours()+i),a.setMinutes(a.getMinutes()+s),a.setSeconds(a.getSeconds()+n),a}#d(t){if(t instanceof Date)return t;const e=new Date,{y:i=e.getFullYear(),m:s=0,d:n=1,hh:r=0,mm:a=0,ss:o=0}=t;if(Number.isNaN(i)||i<1970||i>3e3||s<0||s>11||n<1||n>31||r<0||r>23||a<0||a>59||o<0||o>59)throw new Error("Invalid endTime values provided.");return new Date(i,s,n,r,a,o)}#T(){const t=Date.now();let e=this.#o;if(this.#i){let i=this.#r?this.#l:this.#i-t;if(i<=0)return clearInterval(this.#n),{days:0,hours:0,minutes:0,seconds:0};const s=Math.round(i/1e3%60),n=Math.floor(i/6e4%60),r=Math.floor(i/36e5%24);e={d:Math.floor(i/864e5),hh:r,mm:n,ss:s},console.log(`${JSON.stringify(e)}`)}return 0!=this.#m||this.#h||(e={d:"XX",hh:"XX",mm:"XX",ss:"XX"}),e}#c(){let t=this.#T();console.log(`Writing value ${JSON.stringify(t)} to the system. The start time was ${new Date(this.#s)}`),this.#a&&(t={d:0,hh:0,mm:0,ss:0});for(const[e,i]of Object.entries(this.#e))i.textContent=String(t[e]).padStart(2,"0")}start(){this.#n&&clearInterval(this.#n),this.#h=!0,console.log(`startDateTime is ${this.#s} in start()`),this.#s||(this.#s=Date.now(),this.#o&&(this.#i=this.#D(this.#o))),this.onStart(),this.#n=setInterval((()=>{this.#c(),this.#a=!1,this.onUpdate(),this.#i-new Date<=0&&(clearInterval(this.#n),this.#n=null,this.onComplete())}),1e3)}stop(){clearInterval(this.#n),this.#n=null,this.#i=null,this.#r=!1,this.#a=!0,this.#l=null,this.#c(),this.onStop()}pause(){this.#n&&this.#m&&!this.#r?(clearInterval(this.#n),this.#l=this.#i-new Date,this.#r=!0,this.onPause()):console.log(`Only Duration Timers can be Paused. This timer has a fixed end time at ${this.#i}`)}resume(){this.#r&&(this.#m&&(this.#i=new Date((new Date).getTime()+this.#l)),this.#r=!1,this.start(),this.onResume())}get endTime(){return this.#i}get endDuration(){return this.#o}get timeLeft(){return this.#T()}static formatDate(t){return t.toLocaleDateString("en-US",{weekday:"short",year:"numeric",month:"short",day:"2-digit"}).replace(",","")+" "+t.toTimeString().split(" ")[0]}static formatDuration(t){return`${t.d} <small>days</small> ${t.hh} <small>hours</small> ${t.mm} <small>minutes</small> ${t.ss} <small>seconds</small>`}},t}({});
